class Solution {
public:
    int numDecodings(string s) {
    int n=s.size();
    vector<int> memo(n, -1);  // Memoization table to store the number of ways for each index
    return decode(0, s, memo);    
    }
private:
   int decode(int i, string& s, vector<vector<int>>& memo)
   {
    int n=s.size();
    if(i==n) return 1;//very imp..... reachend of string..only 1 way to decode.. do nothing
    if(s[i]=='0') return 0;
    if(memo[i]!=-1) return memo[i];
    int res=decode(i+1,s,memo);
    if(i+1<n && (s[i]=='1'||(s[i]=='2' && s[i + 1] >= '0' && s[i + 1] <= '6')))
    {
        //i<n ie within limits, 
        res+=decode(i+2,s,memo);
    }
    memo[i]=res;
    return res;
   }
};
